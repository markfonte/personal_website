// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Projects matches snapshot 1`] = `
<div>
  <p
    className="MuiTypography-root Projects-title-1 MuiTypography-h6 MuiTypography-paragraph"
  >
    My work experiences, internships, side projects and hackathon projects
  </p>
  <p
    className="MuiTypography-root MuiTypography-body1 MuiTypography-colorSecondary"
  >
    <b>
      Click to expand/collapse cards
    </b>
  </p>
  <div
    className="MuiPaper-root MuiCard-root card MuiPaper-elevation8 MuiPaper-rounded"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-controls="amazon-content"
        aria-disabled={false}
        aria-expanded={false}
        aria-label="Amazon"
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        id="amazon-header"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <div
            className="AmazonCard-expansionHeaderContainer-34"
          >
            <div
              className="MuiCardHeader-root"
            >
              <div
                className="MuiCardHeader-content"
              >
                <span
                  className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
                >
                  Amazon
                </span>
                <span
                  className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                >
                  Software Engineer
                </span>
              </div>
            </div>
            <img
              alt="Amazon logo"
              className="MuiCardMedia-root AmazonCard-amazonLogo-32 MuiCardMedia-media MuiCardMedia-img"
              src="/images/amazon_logo.svg"
              title="Amazon logo"
            />
            <div>
              <div
                className="MuiButtonBase-root MuiChip-root AmazonCard-tags-33 MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root MuiChip-icon"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
                  />
                </svg>
                <span
                  className="MuiChip-label"
                >
                  August 2020 â†’ Present
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root AmazonCard-tags-33 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorPrimary"
                />
                <span
                  className="MuiChip-label"
                >
                  Full-Time
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <button
              aria-describedby={null}
              className="MuiButtonBase-root MuiIconButton-root"
              disabled={false}
              onBlur={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              tabIndex={0}
              title="Expand/collapse card"
              type="button"
            >
              <span
                className="MuiIconButton-label"
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                  />
                </svg>
              </span>
              <span
                className="MuiTouchRipple-root"
              />
            </button>
          </span>
          <span
            className="MuiTouchRipple-root"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="MuiPaper-root MuiCard-root card MuiPaper-elevation8 MuiPaper-rounded"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-controls="jpmorgan-content"
        aria-disabled={false}
        aria-expanded={false}
        aria-label="JPMorgan"
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        id="jpmorgan-header"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <div
            className="JPMorganCard-expansionHeaderContainer-154"
          >
            <div
              className="MuiCardHeader-root"
            >
              <div
                className="MuiCardHeader-content"
              >
                <span
                  className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
                >
                  J.P. Morgan Chase
                </span>
                <span
                  className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                >
                  Software Engineering Intern
                </span>
              </div>
            </div>
            <img
              alt="J.P. Morgan Chase logo"
              className="MuiCardMedia-root JPMorganCard-jpMorganLogo-151 MuiCardMedia-media MuiCardMedia-img"
              src="/images/jpmorgan_logo.svg"
              title="J.P. Morgan Chase logo"
            />
            <div>
              <div
                className="MuiButtonBase-root MuiChip-root JPMorganCard-tags-153 MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root MuiChip-icon"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
                  />
                </svg>
                <span
                  className="MuiChip-label"
                >
                  June 2019 â†’ August 2019
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root JPMorganCard-tags-153 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorPrimary"
                />
                <span
                  className="MuiChip-label"
                >
                  Internship
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root JPMorganCard-tags-153 MuiChip-colorSecondary MuiChip-clickableColorSecondary MuiChip-outlined MuiChip-outlinedSecondary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorSecondary"
                />
                <span
                  className="MuiChip-label"
                >
                  Java Spring Boot
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root JPMorganCard-tags-153 MuiChip-colorSecondary MuiChip-clickableColorSecondary MuiChip-outlined MuiChip-outlinedSecondary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorSecondary"
                />
                <span
                  className="MuiChip-label"
                >
                  Material UI
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root JPMorganCard-tags-153 MuiChip-colorSecondary MuiChip-clickableColorSecondary MuiChip-outlined MuiChip-outlinedSecondary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorSecondary"
                />
                <span
                  className="MuiChip-label"
                >
                  React
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root JPMorganCard-tags-153 MuiChip-colorSecondary MuiChip-clickableColorSecondary MuiChip-outlined MuiChip-outlinedSecondary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorSecondary"
                />
                <span
                  className="MuiChip-label"
                >
                  React Native
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <button
              aria-describedby={null}
              className="MuiButtonBase-root MuiIconButton-root"
              disabled={false}
              onBlur={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              tabIndex={0}
              title="Expand/collapse card"
              type="button"
            >
              <span
                className="MuiIconButton-label"
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                  />
                </svg>
              </span>
              <span
                className="MuiTouchRipple-root"
              />
            </button>
          </span>
          <span
            className="MuiTouchRipple-root"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="MuiPaper-root MuiCard-root card MuiPaper-elevation8 MuiPaper-rounded"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-controls="learningaz-content"
        aria-disabled={false}
        aria-expanded={false}
        aria-label="Learning A-Z"
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        id="learningaz-header"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <div
            className="LAZCard-expansionHeaderContainer-159"
          >
            <div
              className="MuiCardHeader-root"
            >
              <div
                className="MuiCardHeader-content"
              >
                <span
                  className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
                >
                  Learning A-Z
                </span>
                <span
                  className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                >
                  Software Engineering Intern
                </span>
              </div>
            </div>
            <img
              alt="Learning A-Z logo"
              className="MuiCardMedia-root LAZCard-lazLogo-155 MuiCardMedia-media MuiCardMedia-img"
              src="/images/laz_logo.svg"
              title="Learning A-Z logo"
            />
            <div>
              <div
                className="MuiButtonBase-root MuiChip-root LAZCard-tags-158 MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root MuiChip-icon"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
                  />
                </svg>
                <span
                  className="MuiChip-label"
                >
                  May 2017 â†’ August 2018
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root LAZCard-tags-158 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorPrimary"
                />
                <span
                  className="MuiChip-label"
                >
                  Internship
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root LAZCard-tags-158 MuiChip-colorSecondary MuiChip-clickableColorSecondary MuiChip-outlined MuiChip-outlinedSecondary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorSecondary"
                />
                <span
                  className="MuiChip-label"
                >
                  Android
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root LAZCard-tags-158 MuiChip-colorSecondary MuiChip-clickableColorSecondary MuiChip-outlined MuiChip-outlinedSecondary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorSecondary"
                />
                <span
                  className="MuiChip-label"
                >
                  Kotlin
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root LAZCard-tags-158 MuiChip-colorSecondary MuiChip-clickableColorSecondary MuiChip-outlined MuiChip-outlinedSecondary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorSecondary"
                />
                <span
                  className="MuiChip-label"
                >
                  JavaScript
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root LAZCard-tags-158 MuiChip-colorSecondary MuiChip-clickableColorSecondary MuiChip-outlined MuiChip-outlinedSecondary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorSecondary"
                />
                <span
                  className="MuiChip-label"
                >
                  PHP
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root LAZCard-tags-158 MuiChip-colorSecondary MuiChip-clickableColorSecondary MuiChip-outlined MuiChip-outlinedSecondary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorSecondary"
                />
                <span
                  className="MuiChip-label"
                >
                  MySQL
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <button
              aria-describedby={null}
              className="MuiButtonBase-root MuiIconButton-root"
              disabled={false}
              onBlur={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              tabIndex={0}
              title="Expand/collapse card"
              type="button"
            >
              <span
                className="MuiIconButton-label"
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                  />
                </svg>
              </span>
              <span
                className="MuiTouchRipple-root"
              />
            </button>
          </span>
          <span
            className="MuiTouchRipple-root"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="MuiPaper-root MuiCard-root card MuiPaper-elevation8 MuiPaper-rounded"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-controls="michigan-content"
        aria-disabled={false}
        aria-expanded={false}
        aria-label="Michigan"
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        id="michigan-header"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <div
            className="CompletedCourseworkCard-expansionHeaderContainer-162"
          >
            <div
              className="MuiCardHeader-root"
            >
              <div
                className="MuiCardHeader-content"
              >
                <span
                  className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
                >
                  University of Michigan
                </span>
                <span
                  className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                >
                  Graduated May 2020 with a Bachelor's in Computer Science in Engineering and a minor in Entrepreneurship
                </span>
              </div>
            </div>
            <img
              alt="University of Michigan banner logo"
              className="MuiCardMedia-root CompletedCourseworkCard-universityOfMichiganLogo-160 MuiCardMedia-media MuiCardMedia-img"
              src="images/university_of_michigan_logo.svg"
              title="University of Michigan banner logo"
            />
            <div>
              <div
                className="MuiButtonBase-root MuiChip-root CompletedCourseworkCard-tags-161 MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root MuiChip-icon"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
                  />
                </svg>
                <span
                  className="MuiChip-label"
                >
                  September 2016 â†’ May 2020
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <button
              aria-describedby={null}
              className="MuiButtonBase-root MuiIconButton-root"
              disabled={false}
              onBlur={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              tabIndex={0}
              title="Expand/collapse card"
              type="button"
            >
              <span
                className="MuiIconButton-label"
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                  />
                </svg>
              </span>
              <span
                className="MuiTouchRipple-root"
              />
            </button>
          </span>
          <span
            className="MuiTouchRipple-root"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="MuiPaper-root MuiCard-root card MuiPaper-elevation8 MuiPaper-rounded"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-controls="mi-symptoms-content"
        aria-disabled={false}
        aria-expanded={false}
        aria-label="MI Symptoms"
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        id="mi-symptoms-header"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <div
            className="MISymptomsCard-expansionHeaderContainer-166"
          >
            <div
              className="MuiCardHeader-root"
            >
              <div
                className="MuiCardHeader-content"
              >
                <span
                  className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
                >
                  MI Symptoms Project
                </span>
                <span
                  className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                >
                  Testing Team Lead
                </span>
              </div>
            </div>
            <div>
              <div
                className="MuiButtonBase-root MuiChip-root MISymptomsCard-tags-165 MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root MuiChip-icon"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
                  />
                </svg>
                <span
                  className="MuiChip-label"
                >
                  April 2020 â†’ May 2020
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root MISymptomsCard-tags-165 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorPrimary"
                />
                <span
                  className="MuiChip-label"
                >
                  Part-Time
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root MISymptomsCard-tags-165 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorPrimary"
                />
                <span
                  className="MuiChip-label"
                >
                  Startup
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root MISymptomsCard-tags-165 MuiChip-colorSecondary MuiChip-clickableColorSecondary MuiChip-outlined MuiChip-outlinedSecondary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorSecondary"
                />
                <span
                  className="MuiChip-label"
                >
                  Cypress
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root MISymptomsCard-tags-165 MuiChip-colorSecondary MuiChip-clickableColorSecondary MuiChip-outlined MuiChip-outlinedSecondary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorSecondary"
                />
                <span
                  className="MuiChip-label"
                >
                  Firebase
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root MISymptomsCard-tags-165 MuiChip-colorSecondary MuiChip-clickableColorSecondary MuiChip-outlined MuiChip-outlinedSecondary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorSecondary"
                />
                <span
                  className="MuiChip-label"
                >
                  Jest
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
              <div
                className="MuiButtonBase-root MuiChip-root MISymptomsCard-tags-165 MuiChip-colorSecondary MuiChip-clickableColorSecondary MuiChip-outlined MuiChip-outlinedSecondary MuiChip-clickable"
                onBlur={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                role="button"
                tabIndex={0}
              >
                <div
                  className="MuiChip-icon MuiChip-iconColorSecondary"
                />
                <span
                  className="MuiChip-label"
                >
                  JMeter
                </span>
                <span
                  className="MuiTouchRipple-root"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <button
              aria-describedby={null}
              className="MuiButtonBase-root MuiIconButton-root"
              disabled={false}
              onBlur={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              tabIndex={0}
              title="Expand/collapse card"
              type="button"
            >
              <span
                className="MuiIconButton-label"
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                  />
                </svg>
              </span>
              <span
                className="MuiTouchRipple-root"
              />
            </button>
          </span>
          <span
            className="MuiTouchRipple-root"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="MuiPaper-root MuiCard-root card MuiPaper-elevation8 MuiPaper-rounded"
  >
    <div
      className="MuiCardHeader-root"
    >
      <div
        className="MuiCardHeader-content"
      >
        <span
          className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
        >
          InstEvents
        </span>
        <span
          className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
        >
          Hackathon Project @ MHacks 12
        </span>
      </div>
    </div>
    <div
      alt="MHacks 12 logo"
      className="MuiCardMedia-root MHacks12Card-media-167"
      style={
        Object {
          "backgroundImage": "url(\\"/images/mhacks_logo.png\\")",
        }
      }
      title="MHacks 12 logo"
    />
    <div
      className="MuiCardContent-root"
    >
      <p
        className="MuiTypography-root MuiTypography-body1"
      >
        This project was definitely my favorite hackathon project. Nathan and I had 36 hours at MHacks to make a very solid project, and I thought we delivered on our own high expectations. The idea for the app came out of one of my entrepreneurship classes where we were asked to "explore" something new every week. It did not matter where we went - concerts, festivals, restaurants - as long as it was something new to us. Thus, I was craving an app that I could open up to instantly view current events in my area. The app features a Google Maps view that immediately opens to show today's current and upcoming events. In addition, it allows users to browse current and upcoming events in a clean RecyclerView/Cards list. Users can add events with an interface that features date pickers, time pickers, address autocomplete using the Google Maps Places API, the ability to add a cover photo and more!
        <br />
         
        <br />
        For this app, we focused on making sure all of the features that we completed were done well. For example, we put lots of extra time into making sure the "Add Event" flow was as seamless as possible, instead of using that time to partially complete some of our stretch goals. The advantage of this is a good UX, even with just the app we made during the hackathon. Going forward, we plan to continue working on other features like web-scraping for popular events, and an eventual release to the Google Play Store. More details on upcoming features and more on our
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://github.com/markfonte/InstEvents"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Github
        </a>
        ! We also believe that the app has significant value as-is, because of the fact that anyone can post an event. This, in combination with the built-in Google Maps view, allows for a location-based sorting of events as opposed to the normal popularity-based sorting of events. In other words, events with only 30 people attending get the same weight on the map as those with 5,000. This allows for an even playing field and is a concept we have not really seen before.
        <br />
         
        <br />
        View it on
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://devpost.com/software/instevent"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Devpost
        </a>
         
        or
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://github.com/markfonte/InstEvents"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Github
        </a>
        <br />
         
        <br />
        <picture>
          <source
            srcSet={
              Object {
                "process": [Function],
              }
            }
            type="image/webp"
          />
          <source
            srcSet={
              Object {
                "process": [Function],
              }
            }
            type="image/jpg"
          />
          <img
            alt="InstEvents screenshot 3"
            className="MHacks12Card-screenshot-169"
            srcSet={
              Array [
                Object {
                  "process": [Function],
                },
                Object {
                  "process": [Function],
                },
              ]
            }
          />
        </picture>
        <picture>
          <source
            srcSet={
              Object {
                "process": [Function],
              }
            }
            type="image/webp"
          />
          <source
            srcSet={
              Object {
                "process": [Function],
              }
            }
            type="image/jpg"
          />
          <img
            alt="InstEvents screenshot 1"
            className="MHacks12Card-screenshot-169"
            srcSet={
              Array [
                Object {
                  "process": [Function],
                },
                Object {
                  "process": [Function],
                },
              ]
            }
          />
        </picture>
        <picture>
          <source
            srcSet={
              Object {
                "process": [Function],
              }
            }
            type="image/webp"
          />
          <source
            srcSet={
              Object {
                "process": [Function],
              }
            }
            type="image/jpg"
          />
          <img
            alt="InstEvents screenshot 2"
            className="MHacks12Card-screenshot-169"
            srcSet={
              Array [
                Object {
                  "process": [Function],
                },
                Object {
                  "process": [Function],
                },
              ]
            }
          />
        </picture>
        <picture>
          <source
            srcSet={
              Object {
                "process": [Function],
              }
            }
            type="image/webp"
          />
          <source
            srcSet={
              Object {
                "process": [Function],
              }
            }
            type="image/jpg"
          />
          <img
            alt="Nathan and Mark MHacks 12"
            className="MHacks12Card-screenshot-169"
            srcSet={
              Array [
                Object {
                  "process": [Function],
                },
                Object {
                  "process": [Function],
                },
              ]
            }
          />
        </picture>
      </p>
    </div>
  </div>
  <div
    className="MuiPaper-root MuiCard-root card MuiPaper-elevation8 MuiPaper-rounded"
  >
    <div
      className="MuiCardHeader-root"
    >
      <div
        className="MuiCardHeader-content"
      >
        <span
          className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
        >
          WalkLens
        </span>
        <span
          className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
        >
          Android application
        </span>
      </div>
    </div>
    <div
      className="MuiCardContent-root"
    >
      <img
        alt="WalkLens logo"
        className="WalklensCard-logo-178"
        src={
          Object {
            "process": [Function],
          }
        }
        title="WalkLens logo"
      />
      <p
        className="MuiTypography-root MuiTypography-body1"
      >
        This project was built in my
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://art.ai.umich.edu/course/EECS%20441/"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          EECS 441: Mobile App Development for Entrepreneurs
        </a>
         
        class during senior year. The idea is that users give permission to the application to periodically poll their location to see if they are approaching a crosswalk. If the app determines that a user is approaching a road, they receive a pop-up notification. This alerts the user to look up from their phone to help ensure that they are not wandering into the street and putting themselves in danger. The application comes from the idea that pedestrian safety is an issue that can be addressed by encouraging smartphone users to look up while they are walking. A more perfect solution would be for people to simply look while they are walking, but this does not always happen so we tried to combat it from the technology side.
        <br />
         
        <br />
        WalkLens is able to do all of the work it needs inside the logic of the Android application; it does not require a custom backend database. It uses the
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://developers.google.com/maps/documentation/android-sdk/intro"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Google Maps SDK for Android
        </a>
         
        to display the map UI when opening the application, and the
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://developers.google.com/maps/documentation/roads/intro"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Google Roads API
        </a>
         
        to find the nearest road to a user. It runs as a background process that wakes up in set intervals (between 5 and 30 seconds), then determines the user's current latitude/longitude and calculates if it is near a road. If it is close to the nearest road (between 30-70 feet) then it sends a notification to the user. Additionally, as an implementation of dead reckoning, if a user is approaching a crosswalk it delays sending the notification until they have almost reached it. WalkLens uses
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://developer.android.com/topic/libraries/architecture/livedata"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          LiveData
        </a>
        , the
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://developer.android.com/guide/navigation"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Navigation Architecture component
        </a>
        , data binding, coroutines, ViewModels,
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://square.github.io/okhttp/"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          OkHttp
        </a>
         
        and much more. At the time of writing, it is available on the Google Play Store. There are no plans to make an iOS version of WalkLens.
        <br />
         
        <br />
        View it on
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://github.com/markfonte/WalkLens"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Github
        </a>
         
        or the
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://play.google.com/store/apps/details?id=fonte.com.walklens&hl=en_US"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Google Play Store
        </a>
      </p>
      <picture>
        <source
          srcSet={
            Object {
              "process": [Function],
            }
          }
          type="image/webp"
        />
        <source
          srcSet={
            Object {
              "process": [Function],
            }
          }
          type="image/jpg"
        />
        <img
          alt="WalkLens screenshot 1"
          className="WalklensCard-screenshot-177"
          srcSet={
            Array [
              Object {
                "process": [Function],
              },
              Object {
                "process": [Function],
              },
            ]
          }
        />
      </picture>
      <picture>
        <source
          srcSet={
            Object {
              "process": [Function],
            }
          }
          type="image/webp"
        />
        <source
          srcSet={
            Object {
              "process": [Function],
            }
          }
          type="image/jpg"
        />
        <img
          alt="WalkLens screenshot 2"
          className="WalklensCard-screenshot-177"
          srcSet={
            Array [
              Object {
                "process": [Function],
              },
              Object {
                "process": [Function],
              },
            ]
          }
        />
      </picture>
      <picture>
        <source
          srcSet={
            Object {
              "process": [Function],
            }
          }
          type="image/webp"
        />
        <source
          srcSet={
            Object {
              "process": [Function],
            }
          }
          type="image/jpg"
        />
        <img
          alt="WalkLens screenshot 3"
          className="WalklensCard-screenshot-177"
          srcSet={
            Array [
              Object {
                "process": [Function],
              },
              Object {
                "process": [Function],
              },
            ]
          }
        />
      </picture>
    </div>
  </div>
  <div
    className="MuiPaper-root MuiCard-root card MuiPaper-elevation8 MuiPaper-rounded"
  >
    <div
      className="MuiCardHeader-root"
    >
      <div
        className="MuiCardHeader-content"
      >
        <span
          className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
        >
          Laughable Lyrics
        </span>
        <span
          className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
        >
          Hackathon Winner @ Spartahack V
        </span>
      </div>
    </div>
    <div
      alt="SpartaHack V logo"
      className="MuiCardMedia-root Spartahack5Card-media-179"
      style={
        Object {
          "backgroundImage": "url(\\"/images/spartahack_logo.png\\")",
        }
      }
      title="SpartaHack V logo"
    />
    <div
      className="MuiCardContent-root"
    >
      <p
        className="MuiTypography-root MuiTypography-body1 MuiTypography-paragraph"
      >
        This hackathon project,
         
        <i>
          Laughable Lyrics
        </i>
        , is one of my favorites.
         
        We took inspiration from the popular
         
        <i>
          "Google Translate Sings"
        </i>
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://www.youtube.com/watch?v=2bVAoVlFYf0"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          YouTube videos
        </a>
         
        and decided we could automate that process. Using Google Translate APIs we built an Android application that allowed users to translate the Genius Lyrics through a specified number of languages, and back to English. The result was always hilarious, and the user interface we built (using Android Jetpack) made it very easy to do. We won 
        <i>
          Most Creative/Funniest Hack
        </i>
         for the project. View it on
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://devpost.com/software/laughable-lyrics"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Devpost
        </a>
         
        or
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://github.com/nathan815/Laughable-Lyrics"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Github
        </a>
      </p>
      <img
        alt="Laughable Lyrics logo"
        className="Spartahack5Card-logo-180"
        src={
          Object {
            "process": [Function],
          }
        }
        title="Laughable Lyrics logo"
      />
    </div>
  </div>
  <div
    className="MuiPaper-root MuiCard-root card MuiPaper-elevation8 MuiPaper-rounded"
  >
    <div
      className="MuiCardHeader-root"
    >
      <div
        className="MuiCardHeader-content"
      >
        <span
          className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
        >
          Road Mapper
        </span>
        <span
          className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
        >
          EECS 493 class project
        </span>
      </div>
    </div>
    <div
      className="MuiCardContent-root"
    >
      <p
        className="MuiTypography-root MuiTypography-body1 MuiTypography-gutterBottom"
      >
        This was just a small project that we worked on for
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://atlas.ai.umich.edu/course/EECS%20493/"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          EECS 493
        </a>
         
        during my final semester in college. It was really fun because I got to use
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://vuejs.org/"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Vue.js
        </a>
         
        for the first time on an actual web application. It was very simple to use, and I loved how lightweight it was (with a single import you can start using Vue right away in any web application).
        <br />
        <br />
        The application was modeled off of how applications like
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://www.waze.com/"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Waze
        </a>
         
        allow users to indicate driving hazards and speed traps that they find. We used the same concept to crowdsource the presence of (primarily winter) walking hazards like ice, snow and mud. Using the
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://docs.mapbox.com/api/"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Mapbox API
        </a>
         
        we had a map that allowed users to create, read, update and delete different walking hazards. They could enter a description, drag markers to a spot, select the type of hazard, and even use built-in walking directions. We stored the currently-active hazards in a
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://docs.python.org/2/library/sqlite3.html"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          SQLite
        </a>
         
        database managed by a
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://www.python.org/"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Python
        </a>
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://flask.palletsprojects.com/en/1.1.x/"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Flask
        </a>
         
        application.
      </p>
      <picture>
        <br />
        <source
          srcSet={
            Object {
              "process": [Function],
            }
          }
          type="image/webp"
        />
        <source
          srcSet={
            Object {
              "process": [Function],
            }
          }
          type="image/png"
        />
        <img
          alt="Road Mappers screenshot 1"
          className="RoadMapperCard-screenshotOne-181"
          srcSet={
            Array [
              Object {
                "process": [Function],
              },
              Object {
                "process": [Function],
              },
            ]
          }
          title="Road Mappers screenshot 1"
        />
      </picture>
      <p
        className="MuiTypography-root MuiTypography-body1 MuiTypography-gutterBottom"
      >
        <br />
        Although we never released it to the public, it was a great experience with a new framework and a new API. It was also a testament to how smoothly a project can be built if the team is on the same page, despite being made entirely during quarantine!
      </p>
    </div>
  </div>
  <div>
    <div
      className="MuiPaper-root MuiCard-root card MuiPaper-elevation8 MuiPaper-rounded"
    >
      <div
        className="MuiCardHeader-root"
      >
        <div
          className="MuiCardHeader-content"
        >
          <span
            className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
          >
            Denial Dial
          </span>
          <span
            className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
          >
            Hackathon Project @ RevolutionUC 8
          </span>
        </div>
      </div>
      <div
        className="RevolutionUC8Card-mediaWrapper-183"
      >
        <div
          alt="RevolutionUC 8 logo"
          className="MuiCardMedia-root RevolutionUC8Card-media-182"
          style={
            Object {
              "backgroundImage": "url(\\"/images/revolutionuc_logo.png\\")",
            }
          }
          title="RevolutionUC 8 logo"
        />
      </div>
      <div
        className="MuiCardContent-root"
      >
        <p
          className="MuiTypography-root MuiTypography-body1 MuiTypography-paragraph"
        >
          This hackathon was not as successful as the other two, but it was still a great experience. We spent at least the first 12 hours of the 24-hour hackathon bouncing between a bunch of different ideas. We ended up building a clever rejection hotline called Denial Dial using Twilio's APIs. It connected two people who were given the fake phone number we set up, and had them communicate for awhile before breaking the news to them. It also had some cool side features like an automated message that played if anyone called the number. We did not win anything with the project, but was still fun experimenting with some new technologies! View it on
           
          <a
            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
            href="https://devpost.com/software/revolution-banking"
            onBlur={[Function]}
            onFocus={[Function]}
          >
            Devpost
          </a>
           
          or
           
          <a
            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
            href="https://github.com/nathan815/denial-dial"
            onBlur={[Function]}
            onFocus={[Function]}
          >
            Github
          </a>
        </p>
        <img
          alt="CongoAI logo"
          className="RevolutionUC8Card-logo-184"
          src={
            Object {
              "process": [Function],
            }
          }
          title="CongoAI logo"
        />
      </div>
    </div>
  </div>
  <div
    className="MuiPaper-root MuiCard-root card MuiPaper-elevation8 MuiPaper-rounded"
  >
    <div
      className="MuiCardHeader-root"
    >
      <div
        className="MuiCardHeader-content"
      >
        <span
          className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
        >
          Congo AI
        </span>
        <span
          className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
        >
          Hackathon Winner @ GrizzHacks 3
        </span>
      </div>
    </div>
    <div
      alt="GrizzHacks 3 logo"
      className="MuiCardMedia-root Grizzhacks3Card-media-185"
      style={
        Object {
          "backgroundImage": "url(\\"/images/grizzhacks_logo.png\\")",
        }
      }
      title="GrizzHacks 3 logo"
    />
    <div
      className="MuiCardContent-root"
    >
      <p
        className="MuiTypography-root MuiTypography-body1 MuiTypography-paragraph"
      >
        This was the first hackathon I ever competed in. We built an online store to buy and sell pre-trained machine learning models, using Vue.js and MongoDB. While we did not completely finish, the idea was to be able to test out the machine learning models first in the store before purchasing from the person that made it. Most of the credit on this project goes to my team. We won 
        <i>
          Best DevOps Hack, Presented by Ally Financial
        </i>
         and 
        <i>
          Best use of Dynatrace
        </i>
        . View it on 
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://devpost.com/software/congoai"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Devpost
        </a>
         
        or
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://github.com/nathan815/CongoAI"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Github
        </a>
      </p>
      <img
        alt="CongoAI logo"
        className="Grizzhacks3Card-logo-186"
        src={
          Object {
            "process": [Function],
          }
        }
        title="CongoAI logo"
      />
    </div>
  </div>
  <div
    className="MuiPaper-root MuiCard-root card MuiPaper-elevation8 MuiPaper-rounded"
  >
    <div
      className="MuiCardHeader-root"
    >
      <div
        className="MuiCardHeader-content"
      >
        <span
          className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
        >
          Spotlight
        </span>
        <span
          className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
        >
          Lead Android developer
        </span>
      </div>
    </div>
    <div
      className="MuiCardContent-root"
    >
      <p
        className="MuiTypography-root MuiTypography-body1"
      >
        We worked on Android and iOS applications to help streamline the sorority recruitment process. Both applications were built using Firebase, and the Android application is built using Android Jetpack, architecture components and Google Maps APIs. I built a successful POC for the Android application and successfully onboarded another developer to maintain the project.
      </p>
      <picture>
        <source
          srcSet={
            Object {
              "process": [Function],
            }
          }
          type="image/webp"
        />
        <source
          srcSet={
            Object {
              "process": [Function],
            }
          }
          type="image/png"
        />
        <img
          alt="Spotlight screenshot 1"
          className="SpotlightCard-screenshot-187"
          srcSet={
            Array [
              Object {
                "process": [Function],
              },
              Object {
                "process": [Function],
              },
            ]
          }
        />
      </picture>
      <picture>
        <source
          srcSet={
            Object {
              "process": [Function],
            }
          }
          type="image/webp"
        />
        <source
          srcSet={
            Object {
              "process": [Function],
            }
          }
          type="image/png"
        />
        <img
          alt="Spotlight screenshot 2"
          className="SpotlightCard-screenshot-187"
          srcSet={
            Array [
              Object {
                "process": [Function],
              },
              Object {
                "process": [Function],
              },
            ]
          }
        />
      </picture>
    </div>
  </div>
  <div
    className="MuiPaper-root MuiCard-root card MuiPaper-elevation8 MuiPaper-rounded"
  >
    <div
      className="MuiCardHeader-root"
    >
      <div
        className="MuiCardHeader-content"
      >
        <span
          className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
        >
          Doggie Doodles
        </span>
        <span
          className="MuiTypography-root MuiCardHeader-subheader MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
        >
          Entrepreneur
        </span>
      </div>
    </div>
    <div
      alt="Gimble A Cappella - 2019"
      className="MuiCardMedia-root DoggieDoodlesCard-media-188"
      style={
        Object {
          "backgroundImage": "url(\\"/images/doggie_doodles_logo.jpg\\")",
        }
      }
      title="Gimble A Cappella - 2019"
    />
    <div
      className="MuiCardContent-root"
    >
      <p
        className="MuiTypography-root MuiTypography-body1"
      >
        Started from a class project, this business sells custom merchandise using a digital drawing of your animal.
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="mailto:dopedoggiedoodles@gmail.com"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Send us a picture of your dog or cat
           
        </a>
         and we will turn it into a custom drawing. Then head over to
         
        <a
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorSecondary"
          href="https://www.redbubble.com/people/doggiedoodles"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          Redbubble
        </a>
         
        and you can purchase a custom mug, laptop sticker, phone case, and more. I might not be writing software for this business, but it is still lots of fun!
      </p>
    </div>
  </div>
  <div
    className="InteractionCard-root-189"
  >
    <div
      className="MuiPaper-root MuiCard-root MuiPaper-elevation8 MuiPaper-rounded"
    >
      <div
        className="MuiCardContent-root"
      >
        <div />
        <div
          className="LikeButton-root-190"
        >
          <div
            className="LikeButton-likeButtonWrapper-191"
          >
            <button
              aria-describedby={null}
              className="MuiButtonBase-root MuiIconButton-root"
              disabled={false}
              onBlur={[Function]}
              onClick={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              tabIndex={0}
              title="Click to like page"
              type="button"
            >
              <span
                className="MuiIconButton-label"
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeLarge"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                  />
                </svg>
              </span>
              <span
                className="MuiTouchRipple-root"
              />
            </button>
            <div
              className="MuiPaper-root MuiCard-root LikeButton-captionRoot-192 MuiPaper-elevation1 MuiPaper-rounded"
            >
              <span
                className="MuiTypography-root LikeButton-captionText-193 MuiTypography-caption MuiTypography-colorInherit"
                size="small"
              >
                0
                 likes
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
